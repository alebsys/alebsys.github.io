<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Filesystem on Performance Matters</title>
    <link>https://alebedev.tech/tags/filesystem/</link>
    <description>Recent content in Filesystem on Performance Matters</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 16 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://alebedev.tech/tags/filesystem/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tooling. Cache Hit Ratio</title>
      <link>https://alebedev.tech/posts/cachestat-ebpf-exporter/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://alebedev.tech/posts/cachestat-ebpf-exporter/</guid>
      <description>Об утилите cachestat я узнал из статьи Brendan Gregg - Analyzing a High Rate of Paging.
В ней расследуются причины аномально долгого процессинга файлов размером в 100Gbytes, тогда как файлы в 40Gbytes обрабатывались на несколько порядков быстрее.
В том кейсе точно поставить диагноз - большой объект не помещался в кеш, что приводило к trashing&amp;rsquo;у страниц памяти, автору помог инструмент cachestat.
Если в кратце, то утилита подсчитывает соотношение попаданий в кеш файловой системы относительно общего числа операций на чтение - cache hit ratio:</description>
    </item>
  </channel>
</rss>
